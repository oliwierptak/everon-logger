<?php declare(strict_types = 1);

namespace EveronLoggerTests\Stub\Plugin\Stream;

use Everon\Logger\Contract\Configurator\PluginConfiguratorInterface;
use Everon\Logger\Exception\ConfiguratorValidationException;
use Everon\Shared\Logger\Configurator\MonologLevelConfiguratorTrait;

/**
 * Code generated by POPO generator, do not edit.
 * https://packagist.org/packages/popo/generator
 */
class StreamLoggerPluginConfiguratorStub implements PluginConfiguratorInterface
{
    use MonologLevelConfiguratorTrait;

    private ?string $streamLocation = null;
    private string $pluginClass = StreamLoggerPluginStub::class;
    private ?string $pluginFactoryClass = null;

    public function toArray(): array
    {
        return [];
    }

    public function fromArray(array $data): PluginConfiguratorInterface
    {
        return $this;
    }

    public function requirePluginClass(): string
    {
        return $this->pluginClass;
    }

    public function setPluginClass(string $class): self
    {
        $this->pluginClass = $class;

        return $this;
    }

    public function getPluginFactoryClass(): ?string
    {
        return $this->pluginFactoryClass;
    }

    public function setPluginFactoryClass(?string $pluginFactoryClass): self
    {
        $this->pluginFactoryClass = $pluginFactoryClass;

        return $this;
    }

    public function shouldBubble(): ?bool
    {
        return true;
    }

    public function setStreamLocation(string $logFilename): self
    {
        $this->streamLocation = $logFilename;

        return $this;
    }

    public function requireStreamLocation(): string
    {
        if (!isset($this->streamLocation)) {
            throw new ConfiguratorValidationException(
                'Required value of "streamLocation" has not been set',
            );
        }

        return $this->streamLocation;
    }

    public function getStreamLocation(): string
    {
        return $this->streamLocation;
    }

    public function hasStreamLocation(): bool
    {
        return $this->streamLocation !== null;
    }
}
